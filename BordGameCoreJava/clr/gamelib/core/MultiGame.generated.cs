//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by jni4net. See http://jni4net.sourceforge.net/ 
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GameLib.Core {
    
    
    #region Component Designer generated code 
    public partial class MultiGame_ {
        
        public static global::java.lang.Class _class {
            get {
                return global::GameLib.Core.@__MultiGame.staticClass;
            }
        }
    }
    #endregion
    
    #region Component Designer generated code 
    [global::net.sf.jni4net.attributes.JavaProxyAttribute(typeof(global::GameLib.Core.MultiGame), typeof(global::GameLib.Core.MultiGame_))]
    [global::net.sf.jni4net.attributes.ClrWrapperAttribute(typeof(global::GameLib.Core.MultiGame), typeof(global::GameLib.Core.MultiGame_))]
    internal sealed partial class @__MultiGame : global::java.lang.Object {
        
        internal new static global::java.lang.Class staticClass;
        
        private @__MultiGame(global::net.sf.jni4net.jni.JNIEnv @__env) : 
                base(@__env) {
        }
        
        private static void InitJNI(global::net.sf.jni4net.jni.JNIEnv @__env, java.lang.Class @__class) {
            global::GameLib.Core.@__MultiGame.staticClass = @__class;
        }
        
        private static global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod> @__Init(global::net.sf.jni4net.jni.JNIEnv @__env, global::java.lang.Class @__class) {
            global::System.Type @__type = typeof(__MultiGame);
            global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod> methods = new global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod>();
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "addOnDraw", "OnDraw0", "(Lsystem/MulticastDelegate;)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "removeOnDraw", "OnDraw1", "(Lsystem/MulticastDelegate;)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "Start", "Start2", "()V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "UpDate", "UpDate3", "()V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "End", "End4", "()V"));
            return methods;
        }
        
        private static void OnDraw0(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle value) {
            // (Lsystem/MulticastDelegate;)V
            // (LGameLib/Core/MultiGame+OnDrawHandler;)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::GameLib.Core.MultiGame @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::GameLib.Core.MultiGame>(@__env, @__obj);
            @__real.OnDraw += global::net.sf.jni4net.utils.Convertor.StrongJ2CpDelegate<global::GameLib.Core.MultiGame.OnDrawHandler>(@__env, value);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static void OnDraw1(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle value) {
            // (Lsystem/MulticastDelegate;)V
            // (LGameLib/Core/MultiGame+OnDrawHandler;)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::GameLib.Core.MultiGame @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::GameLib.Core.MultiGame>(@__env, @__obj);
            @__real.OnDraw -= global::net.sf.jni4net.utils.Convertor.StrongJ2CpDelegate<global::GameLib.Core.MultiGame.OnDrawHandler>(@__env, value);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static void Start2(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()V
            // ()V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::GameLib.Core.MultiGame @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::GameLib.Core.MultiGame>(@__env, @__obj);
            @__real.Start();
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static void UpDate3(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()V
            // ()V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::GameLib.Core.MultiGame @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::GameLib.Core.MultiGame>(@__env, @__obj);
            @__real.UpDate();
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static void End4(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()V
            // ()V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::GameLib.Core.MultiGame @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::GameLib.Core.MultiGame>(@__env, @__obj);
            @__real.End();
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        new internal sealed class ContructionHelper : global::net.sf.jni4net.utils.IConstructionHelper {
            
            public global::net.sf.jni4net.jni.IJvmProxy CreateProxy(global::net.sf.jni4net.jni.JNIEnv @__env) {
                return new global::GameLib.Core.@__MultiGame(@__env);
            }
        }
    }
    #endregion
}
