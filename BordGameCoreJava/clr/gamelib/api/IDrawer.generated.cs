//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by jni4net. See http://jni4net.sourceforge.net/ 
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GameLib.API {
    
    
    #region Component Designer generated code 
    public partial class IDrawer_ {
        
        public static global::java.lang.Class _class {
            get {
                return global::GameLib.API.@__IDrawer.staticClass;
            }
        }
    }
    #endregion
    
    #region Component Designer generated code 
    [global::net.sf.jni4net.attributes.JavaProxyAttribute(typeof(global::GameLib.API.IDrawer), typeof(global::GameLib.API.IDrawer_))]
    [global::net.sf.jni4net.attributes.ClrWrapperAttribute(typeof(global::GameLib.API.IDrawer), typeof(global::GameLib.API.IDrawer_))]
    internal sealed partial class @__IDrawer : global::java.lang.Object, global::GameLib.API.IDrawer {
        
        internal new static global::java.lang.Class staticClass;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_DrawPanel0;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_DrawConsole1;
        
        private @__IDrawer(global::net.sf.jni4net.jni.JNIEnv @__env) : 
                base(@__env) {
        }
        
        private static void InitJNI(global::net.sf.jni4net.jni.JNIEnv @__env, java.lang.Class @__class) {
            global::GameLib.API.@__IDrawer.staticClass = @__class;
            global::GameLib.API.@__IDrawer.j4n_DrawPanel0 = @__env.GetMethodID(global::GameLib.API.@__IDrawer.staticClass, "DrawPanel", "(Lgamelib/core/base/GridField;)V");
            global::GameLib.API.@__IDrawer.j4n_DrawConsole1 = @__env.GetMethodID(global::GameLib.API.@__IDrawer.staticClass, "DrawConsole", "(Lgamelib/core/base/GridField;)V");
        }
        
        public void DrawPanel(global::GameLib.Core.Base.GridField field) {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 12)){
            @__env.CallVoidMethod(this, global::GameLib.API.@__IDrawer.j4n_DrawPanel0, global::net.sf.jni4net.utils.Convertor.ParStrongC2Jp<global::GameLib.Core.Base.GridField>(@__env, field));
            }
        }
        
        public void DrawConsole(global::GameLib.Core.Base.GridField field) {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 12)){
            @__env.CallVoidMethod(this, global::GameLib.API.@__IDrawer.j4n_DrawConsole1, global::net.sf.jni4net.utils.Convertor.ParStrongC2Jp<global::GameLib.Core.Base.GridField>(@__env, field));
            }
        }
        
        private static global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod> @__Init(global::net.sf.jni4net.jni.JNIEnv @__env, global::java.lang.Class @__class) {
            global::System.Type @__type = typeof(__IDrawer);
            global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod> methods = new global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod>();
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "DrawPanel", "DrawPanel0", "(Lgamelib/core/base/GridField;)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "DrawConsole", "DrawConsole1", "(Lgamelib/core/base/GridField;)V"));
            return methods;
        }
        
        private static void DrawPanel0(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle field) {
            // (Lgamelib/core/base/GridField;)V
            // (LGameLib/Core/Base/GridField;)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::GameLib.API.IDrawer @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::GameLib.API.IDrawer>(@__env, @__obj);
            @__real.DrawPanel(global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::GameLib.Core.Base.GridField>(@__env, field));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static void DrawConsole1(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle field) {
            // (Lgamelib/core/base/GridField;)V
            // (LGameLib/Core/Base/GridField;)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::GameLib.API.IDrawer @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::GameLib.API.IDrawer>(@__env, @__obj);
            @__real.DrawConsole(global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::GameLib.Core.Base.GridField>(@__env, field));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        new internal sealed class ContructionHelper : global::net.sf.jni4net.utils.IConstructionHelper {
            
            public global::net.sf.jni4net.jni.IJvmProxy CreateProxy(global::net.sf.jni4net.jni.JNIEnv @__env) {
                return new global::GameLib.API.@__IDrawer(@__env);
            }
        }
    }
    #endregion
}
