//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by jni4net. See http://jni4net.sourceforge.net/ 
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GameLib.API {
    
    
    #region Component Designer generated code 
    public partial class Util_ {
        
        public static global::java.lang.Class _class {
            get {
                return global::GameLib.API.@__Util.staticClass;
            }
        }
    }
    #endregion
    
    #region Component Designer generated code 
    [global::net.sf.jni4net.attributes.JavaProxyAttribute(typeof(global::GameLib.API.Util), typeof(global::GameLib.API.Util_))]
    [global::net.sf.jni4net.attributes.ClrWrapperAttribute(typeof(global::GameLib.API.Util), typeof(global::GameLib.API.Util_))]
    internal sealed partial class @__Util : global::java.lang.Object {
        
        internal new static global::java.lang.Class staticClass;
        
        private @__Util(global::net.sf.jni4net.jni.JNIEnv @__env) : 
                base(@__env) {
        }
        
        private static void InitJNI(global::net.sf.jni4net.jni.JNIEnv @__env, java.lang.Class @__class) {
            global::GameLib.API.@__Util.staticClass = @__class;
        }
        
        private static global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod> @__Init(global::net.sf.jni4net.jni.JNIEnv @__env, global::java.lang.Class @__class) {
            global::System.Type @__type = typeof(__Util);
            global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod> methods = new global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod>();
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "DICE", "DICE0", "(I)I"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "Random", "Random1", "(II)I"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "Random", "Random2", "(Lsystem/collections/IEnumerable;)Lgamelib/core/util/RawColumn;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "Include", "Include3", "([Lgamelib/core/util/RawColumn;[Lgamelib/core/util/RawColumn;Z)Z"));
            return methods;
        }
        
        private static int DICE0(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, int f) {
            // (I)I
            // (I)I
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            int @__return = default(int);
            try {
            @__return = ((int)(global::GameLib.API.Util.DICE(f)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static int Random1(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, int a, int b) {
            // (II)I
            // (II)I
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            int @__return = default(int);
            try {
            @__return = ((int)(global::GameLib.API.Util.Random(a, b)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle Random2(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle source) {
            // (Lsystem/collections/IEnumerable;)Lgamelib/core/util/RawColumn;
            // ([[LSystem/Collections/Generic/IEnumerable`1;)LGameLib/Core/Util/RawColumn;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::GameLib.Core.Util.RawColumn>(@__env, global::GameLib.API.Util.Random(global::net.sf.jni4net.utils.Convertor.FullJ2C<global::System.Collections.Generic.IEnumerable<GameLib.Core.Util.RawColumn>>(@__env, source)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static bool Include3(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle source, global::net.sf.jni4net.utils.JniLocalHandle target, bool strict) {
            // ([Lgamelib/core/util/RawColumn;[Lgamelib/core/util/RawColumn;Z)Z
            // ([LGameLib/Core/Util/RawColumn;[LGameLib/Core/Util/RawColumn;Z)Z
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            bool @__return = default(bool);
            try {
            @__return = ((bool)(global::GameLib.API.Util.Include(global::net.sf.jni4net.utils.Convertor.ArrayStrongJp2C<global::GameLib.Core.Util.RawColumn[], global::GameLib.Core.Util.RawColumn>(@__env, source), global::net.sf.jni4net.utils.Convertor.ArrayStrongJp2C<global::GameLib.Core.Util.RawColumn[], global::GameLib.Core.Util.RawColumn>(@__env, target), strict)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        new internal sealed class ContructionHelper : global::net.sf.jni4net.utils.IConstructionHelper {
            
            public global::net.sf.jni4net.jni.IJvmProxy CreateProxy(global::net.sf.jni4net.jni.JNIEnv @__env) {
                return new global::GameLib.API.@__Util(@__env);
            }
        }
    }
    #endregion
}
